Feature: mark strings with distinguishable prefix

  As an administrator
  I want to have log entries marked with same prefix within single operation
  So that I can distinguish and track operations even if log is written from
  multiple threads or sources

  As a developer
  I want to store prefix in some context
  So that I do not need to format it per each call to logger and so that I can
  access it within nested functions without passing prefix to a function
  directly and screwing up its semantics


  Scenario Outline: direct prefix
    Given   I have a direct <prefix>
    And     I have an injector of direct prefix
    When    I inject prefix into a <string>
    Then    resulting string must be equal to <expected string>

    Examples:
      | prefix | string  | expected string |
      | foo    | Alpha   | fooAlpha        |
      | foo    | Bravo   | fooBravo        |
      | foo    | Charlie | fooCharlie      |

  Scenario Outline: static prefix
    Given   I have a static <prefix> and " - " as a delimiter
    And     I have an injector of static prefix
    When    I inject prefix into a <string>
    Then    resulting string must be equal to <expected string>
    And     resulting string must contain delimited prefix

    Examples:
      | prefix     | string  | expected string      |
      | foo prefix | Alpha   | foo prefix - Alpha   |
      | foo prefix | Bravo   | foo prefix - Bravo   |
      | foo prefix | Charlie | foo prefix - Charlie |


  Scenario Outline: autogenerated prefix
    Given   I don't care about prefix and delimeter
    And     I have an injector of autogenerated prefix
    When    I inject prefix into a <string>
    Then    resulting string must be prefixed with autogenerated operation ID

    Examples:
      | string  |
      | Alpha   |
      | Bravo   |
      | Charlie |


  Scenario Outline: hybrid prefix
    Given   I have a static <prefix> and " - " as a delimiter
    And     I have an injector of hybrid prefix
    When    I inject prefix into a <string>
    Then    resulting string must start with autogenerated prefix and static one

    Examples:
      | prefix     | string  |
      | foo prefix | Alpha   |
      | foo prefix | Bravo   |
      | foo prefix | Charlie |


  Scenario: nested injections
    Given   functions which call each other and produce different prefixes
    When    I call a function
    Then    prefix produced within it must be reused inside nested functions
